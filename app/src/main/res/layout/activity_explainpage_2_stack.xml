<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <TextView
        android:layout_width="match_parent"
        android:layout_height="40dp"
        android:text="스택의 삽입과 제거"
        android:gravity="center"
        android:textSize="15dp"/>

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="350dp"
                android:scaleType="centerCrop"
                android:src="@drawable/image_2_1_stack"/>

            <Button
                android:onClick="mOnPopupClick"
                android:layout_width="70dp"
                android:layout_height="70dp"
                android:layout_gravity="right"
                android:background="@drawable/kuniver"/>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="스택은 구성요소가 차례대로 쌓여있는 순서리스트이다.
                \n\n탑(top) : 스택의 맨 위를 가리킨다. 탑은 스택의 크기와 같다.
                \n\n삽입(push) : 스택에 새로운 데이터를 삽입하는 과정
                \n\n삭제(pop) : 스택의 가장 맨 위 값을 반환하고 스택에서 제거하는 과정
                \n\n스택의 특징은 LIFO(last in, first out)으로 한쪽으로만 자료를 넣고 뺄 수 있는 구조로 되어 있어 마지막에 넣은 값이 가장 먼저 출력된다.
                \n\n장점
                \n- 가장 간단한 형태의 자료구조방식으로 표현이 쉽고 간단합니다.
                \n\n단점
                \n- 크기가 고정된 배열구조 때문에 메모리가 낭비됩니다."
                android:textStyle="bold"
                />

        </LinearLayout>
    </ScrollView>
</LinearLayout>