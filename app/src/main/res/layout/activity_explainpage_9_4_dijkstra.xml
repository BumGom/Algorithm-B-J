<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <TextView
        android:layout_width="match_parent"
        android:layout_height="40dp"
        android:text="최단경로탐색"
        android:gravity="center"
        android:textSize="15dp"/>

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">

            <ImageView
                android:layout_width="match_parent"
                android:layout_height="350dp"
                android:scaleType="centerCrop"
                android:src="@drawable/image_9_4_dijkstra"/>

            <Button
                android:onClick="mOnPopupClick"
                android:layout_width="70dp"
                android:layout_height="70dp"
                android:layout_gravity="right"
                android:background="@drawable/kuniver"/>

            <TextView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:text="
그래프 내의 한 정점에서 다른 정점으로 이동할 때 가중치 합이 최소값이 되게 만드는 경로를 찾는 알고리즘
\n\n
최단 경로 탐색 알고리즘
다익스트라 알고리즘(Dijkstra Algorithm)
\n\n
다익스트라 알고리즘(Dijkstra Algorithm) 실행 과정
\n1. 각 정점 위에 시작점으로부터 자신에게 이르흔 경로의 길이를 저장할 곳을 준비하고 모든 정점 위에 있는 경로의 길이를 ∞(무한대)로 초기화 한다.
\n2. 시작 정점의 경로 길이를 0으로 초기화 하고(시작 정점에서 시작 정점까지의 거리는 0이기 때문) 최단 경로에 추가한다.
\n3. 최단 경로에 새로 추가된 정점의 인접 정점들에 대해 경로 길이를 갱신하고 이들을 최단 경로에 추가한다. 만약 추가하려는 인접 정점이 이미 최단 경로
   안에 존재한다면 갱신되기 이전의 경로 길이가 새로운 경로의 길이보다 더 큰 경우에 한해, 다른 선행 정점을 지나던 기존의 경로를 현재 정점을 경유하도록 수정한다.
\n4. 그래프 내의 모든 정점이 최단 경로에 소속될 때 까지 3. 과정을 반복한다."
                android:textSize="15dp"
                android:textStyle="bold"/>

        </LinearLayout>
    </ScrollView>
</LinearLayout>